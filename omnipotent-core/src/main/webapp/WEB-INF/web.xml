<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" id="WebApp_ID"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
	http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	
	<!-- 设置自定义的监听器 
	<listener>
		<listener-class>com.omnipotent.listener.GetConnListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.omnipotent.listener.MyServletContextAttributeListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.omnipotent.listener.OnlineListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.omnipotent.listener.RequestListener</listener-class>
	</listener>
	-->
	
	<!-- 防止发生java.beans.Introspector内存泄露,应将它配置在ContextLoaderListener的前面 -->
    <!-- 详细描述见http://blog.csdn.net/jadyer/article/details/11991457 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!-- 配置启动Spring IOC容器的Listener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 加载Spring框架配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- 设置统一编码 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 自定义权限检查过滤器 -->
	<filter>
		<!-- Filter的名字，相当于指定@WebFilter的filterName属性 -->
		<filter-name>PermissionFilter</filter-name>
		<!-- Filter的实现类 -->
		<filter-class>com.omnipotent.filter.PermissionFilter</filter-class>
		<!-- 下面的init-param元素配置了一个参数 -->
		<init-param>
			<param-name>filterURL</param-name>
			<param-value>/test.do</param-value>
		</init-param>
	</filter>
	<!-- 定义Filter拦截的URL地址 -->
	<filter-mapping>
		<!-- Filter的名字，与上面配置的必须一致 -->
		<filter-name>PermissionFilter</filter-name>
		<!-- Filter负责拦截的URL，相当于指定@WebFilter的urlPatterns属性 -->
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- springMVC模块 -->
	<servlet>
		<!-- 指定Servlet的名字，相当于指定@WebServlet的name属性 -->
		<servlet-name>dispatcher</servlet-name>
  		<!-- 指定Servlet的实现类，类名要包含包名，并注意大小写 -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:dispatcher-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
  		<!-- 指定Servlet的名字，与上面配置的必须一致 -->
		<servlet-name>dispatcher</servlet-name>
  		<!-- 指定Servlet映射的URL地址，相当于指定@WebServlet的urlPatterns属性-->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 默认欢迎页面设置 -->
	<welcome-file-list>
		<welcome-file>home.jsp</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

</web-app>