<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
    http://www.springframework.org/schema/jdbc 
    http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd 
    http://www.springframework.org/schema/tx    
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd   
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-4.0.xsd 
    http://www.springframework.org/schema/mvc   
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-4.0.xsd
   	http://www.springframework.org/schema/rabbit 
   	http://www.springframework.org/schema/rabbit/spring-rabbit-1.5.xsd">
    
    <!-- 
		我们使用注解一般都会配置扫描包路径选项：
		<context:component-scan base-package=”XX.XX” /> 
    	该配置项其实也包含了自动注入上述processor的功能，因此当使用 <context:component-scan /> 后，
    	就可以将 <context:annotation-config /> 移除了。
    <context:annotation-config />
    <context:spring-configured />
	-->
    
    <!-- 开启注解自动扫描 -->
 	<context:component-scan base-package="com.omnipotent">
	  	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 引入属性文件 
	<context:property-placeholder location="classpath:conf.properties" />
	-->
	
	<!-- 引入DataSource配置 -->
    <import resource="classpath:spring-druid.xml"/>
    
    <!-- 将数据源映射到sqlSessionFactory中 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
    	<property name="configLocation" value="classpath:mybatis-conf.xml" />
    	<!--  
	    <property name="mapperLocations" value="classpath:com/omnipotent/mapper/*.xml" />
    	-->
        <property name="mapperLocations" value="classpath*:mappers/**/*.xml"/>
    </bean>
    
    <!-- SqlSession模板类实例 
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
    -->
    
    <!-- 扫描的包 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.omnipotent.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!--  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" />
        -->
    </bean>
    
 	<!-- 引入Transaction配置 -->
  	<import resource="classpath:transaction.xml" />
  	
  	<!-- 数据轮询文件 
	<import resource="task-config.xml" />
  	-->
    
</beans>